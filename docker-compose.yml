version: '3.8'

services:
  luz-ia:
    image: ${DOCKERHUB_USERNAME}/luz-ia:latest
    container_name: luz-ia
    restart: always
    environment:
      - NODE_ENV=production
      - PORT=5000
      - MONGO_URI=${MONGO_URI}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRE=${JWT_EXPIRE}
      - MINIO_ENDPOINT=${MINIO_ENDPOINT}
      - MINIO_PORT=${MINIO_PORT}
      - MINIO_USE_SSL=${MINIO_USE_SSL}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
      - MINIO_BUCKET_NAME=${MINIO_BUCKET_NAME}
    volumes:
      # Volume para transcrições e arquivos de treinamento da IA
      - luz-ia-data:/app/ai-training
      # Volume para arquivos temporários de upload
      - luz-ia-tmp:/app/server/tmp
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:5000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - traefik-public
      - backend
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
      restart_policy:
        condition: on-failure
        max_attempts: 3
        window: 120s
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.luz-ia.rule=Host(`${DOMAIN_NAME}`)"
        - "traefik.http.routers.luz-ia.entrypoints=websecure"
        - "traefik.http.routers.luz-ia.tls.certresolver=letsencrypt"
        - "traefik.http.services.luz-ia.loadbalancer.server.port=5000"
        - "traefik.docker.network=traefik-public"

networks:
  traefik-public:
    external: true
  backend:
    driver: overlay
    internal: true
    
volumes:
  luz-ia-data:
    driver: local
  luz-ia-tmp:
    driver: local
